<?xml version="1.0"?>
<s:WindowedApplication
        xmlns:fx="http://ns.adobe.com/mxml/2009"
        xmlns:mx="library://ns.adobe.com/flex/mx"
        xmlns:s="library://ns.adobe.com/flex/spark"
        width="320" height="300" title="GraniteDS Feed Tutorial"
        preinitialize="init(); subscribe()">

    <fx:Style>
        @font-face {
            src: url("../resources/assets/fontawesome-webfont.ttf");
            fontFamily: FontAwesome;
        }
    </fx:Style>

    <fx:Script>
        <![CDATA[
            import mx.messaging.events.MessageEvent;
            import mx.messaging.messages.AsyncMessage;

            import org.granite.gravity.Consumer;
            import org.granite.tide.service.ServerSession;
            import org.granite.tide.service.SimpleServerApp;
            import org.granite.tide.spring.Spring;
            import org.graniteds.tutorial.feed.entities.StockPrice;

            private var feedConsumer:Consumer;

            // tag::client-setup[]
            [Inject]
            public var serverSession:ServerSession;

            private function init():void {
                Spring.getInstance().initApplication(); // <1>

                serverSession.serverApp =
                        new SimpleServerApp("/feed", false, "localhost", "8080"); // <2>

                feedConsumer = serverSession.getConsumer("feedTopic", "NASDAQ"); // <3>

                feedConsumer.subscribe(); // <4>
            }
            // end::client-setup[]

            // tag::client-consume[]
            private function subscribe():void {
                feedConsumer.addEventListener(MessageEvent.MESSAGE, messageHandler); // <1>
            }

            private function messageHandler(event:MessageEvent):void {
                var stockPrices:Array = event.message.body as Array; // <2>
                var sp:StockPrice;
                if (tileGroup.numElements == 0) {
                    for each (sp in stockPrices) {
                        var stockPriceView:StockPriceView = new StockPriceView();
                        stockPriceView.stockName = sp.name;
                        stockPriceView.initialPrice = sp.price;
                        tileGroup.addElement(stockPriceView);
                    }
                }
                var idx:int = 0;
                for each (sp in stockPrices)
                    StockPriceView(tileGroup.getElementAt(idx++)).updatePrice(sp.price);
            }
            // end::client-consume[]
        ]]>
    </fx:Script>

    <!-- tag::client-ui[] -->
    <s:VGroup width="100%" height="100%" gap="10" paddingBottom="10" paddingTop="10" paddingLeft="10" paddingRight="10">
        <s:Label text="Stock Feed Example" fontSize="24" fontFamily="Tahoma" width="100%" height="50" verticalAlign="middle"
                 backgroundColor="#97b54b" color="white" paddingLeft="5" paddingRight="5" paddingTop="5" paddingBottom="5"/>

        <s:TileGroup id="tileGroup" orientation="columns" horizontalGap="10" verticalGap="10"
                     horizontalAlign="center" verticalAlign="middle"/>
    </s:VGroup>
    <!-- end::client-ui[] -->
</s:WindowedApplication>
